[

  {
    "url": "https://api.github.com/repos/martinthomson/postel-was-wrong/issues/8",
    "repository_url": "https://api.github.com/repos/martinthomson/postel-was-wrong",
    "labels_url": "https://api.github.com/repos/martinthomson/postel-was-wrong/issues/8/labels{/name}",
    "comments_url": "https://api.github.com/repos/martinthomson/postel-was-wrong/issues/8/comments",
    "events_url": "https://api.github.com/repos/martinthomson/postel-was-wrong/issues/8/events",
    "html_url": "https://github.com/martinthomson/postel-was-wrong/issues/8",
    "id": 320658370,
    "number": 8,
    "title": "RjS has some experience with broken test suites",
    "user": {
      "login": "martinthomson",
      "id": 67641,
      "avatar_url": "https://avatars1.githubusercontent.com/u/67641?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/martinthomson",
      "html_url": "https://github.com/martinthomson",
      "followers_url": "https://api.github.com/users/martinthomson/followers",
      "following_url": "https://api.github.com/users/martinthomson/following{/other_user}",
      "gists_url": "https://api.github.com/users/martinthomson/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/martinthomson/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/martinthomson/subscriptions",
      "organizations_url": "https://api.github.com/users/martinthomson/orgs",
      "repos_url": "https://api.github.com/users/martinthomson/repos",
      "events_url": "https://api.github.com/users/martinthomson/events{/privacy}",
      "received_events_url": "https://api.github.com/users/martinthomson/received_events",
      "type": "User",
      "site_admin": false
    },
    "labels": [

    ],
    "state": "open",
    "locked": false,
    "assignee": null,
    "assignees": [

    ],
    "milestone": null,
    "comments": 0,
    "created_at": "2018-05-07T02:53:27Z",
    "updated_at": "2018-05-07T02:53:27Z",
    "closed_at": null,
    "author_association": "OWNER",
    "body": "These can cause a lot of problems."
  },
  {
    "url": "https://api.github.com/repos/martinthomson/postel-was-wrong/issues/7",
    "repository_url": "https://api.github.com/repos/martinthomson/postel-was-wrong",
    "labels_url": "https://api.github.com/repos/martinthomson/postel-was-wrong/issues/7/labels{/name}",
    "comments_url": "https://api.github.com/repos/martinthomson/postel-was-wrong/issues/7/comments",
    "events_url": "https://api.github.com/repos/martinthomson/postel-was-wrong/issues/7/events",
    "html_url": "https://github.com/martinthomson/postel-was-wrong/issues/7",
    "id": 319801897,
    "number": 7,
    "title": "Extensibility",
    "user": {
      "login": "annevk",
      "id": 1544111,
      "avatar_url": "https://avatars0.githubusercontent.com/u/1544111?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/annevk",
      "html_url": "https://github.com/annevk",
      "followers_url": "https://api.github.com/users/annevk/followers",
      "following_url": "https://api.github.com/users/annevk/following{/other_user}",
      "gists_url": "https://api.github.com/users/annevk/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/annevk/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/annevk/subscriptions",
      "organizations_url": "https://api.github.com/users/annevk/orgs",
      "repos_url": "https://api.github.com/users/annevk/repos",
      "events_url": "https://api.github.com/users/annevk/events{/privacy}",
      "received_events_url": "https://api.github.com/users/annevk/received_events",
      "type": "User",
      "site_admin": false
    },
    "labels": [

    ],
    "state": "open",
    "locked": false,
    "assignee": null,
    "assignees": [

    ],
    "milestone": null,
    "comments": 4,
    "created_at": "2018-05-03T06:35:10Z",
    "updated_at": "2018-05-04T07:32:28Z",
    "closed_at": null,
    "author_association": "NONE",
    "body": "I still think it's worth touching on extensibility in the error handling section. E.g., if HTTP clients all rejected responses with status codes that are not registered rather than falling back to the default for the range, it'd be much harder to introduce a new status code."
  },
  {
    "url": "https://api.github.com/repos/martinthomson/postel-was-wrong/issues/6",
    "repository_url": "https://api.github.com/repos/martinthomson/postel-was-wrong",
    "labels_url": "https://api.github.com/repos/martinthomson/postel-was-wrong/issues/6/labels{/name}",
    "comments_url": "https://api.github.com/repos/martinthomson/postel-was-wrong/issues/6/comments",
    "events_url": "https://api.github.com/repos/martinthomson/postel-was-wrong/issues/6/events",
    "html_url": "https://github.com/martinthomson/postel-was-wrong/issues/6",
    "id": 270204440,
    "number": 6,
    "title": "Shift emphasis",
    "user": {
      "login": "martinthomson",
      "id": 67641,
      "avatar_url": "https://avatars1.githubusercontent.com/u/67641?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/martinthomson",
      "html_url": "https://github.com/martinthomson",
      "followers_url": "https://api.github.com/users/martinthomson/followers",
      "following_url": "https://api.github.com/users/martinthomson/following{/other_user}",
      "gists_url": "https://api.github.com/users/martinthomson/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/martinthomson/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/martinthomson/subscriptions",
      "organizations_url": "https://api.github.com/users/martinthomson/orgs",
      "repos_url": "https://api.github.com/users/martinthomson/repos",
      "events_url": "https://api.github.com/users/martinthomson/events{/privacy}",
      "received_events_url": "https://api.github.com/users/martinthomson/received_events",
      "type": "User",
      "site_admin": false
    },
    "labels": [

    ],
    "state": "closed",
    "locked": false,
    "assignee": null,
    "assignees": [

    ],
    "milestone": null,
    "comments": 0,
    "created_at": "2017-11-01T06:06:00Z",
    "updated_at": "2018-03-05T05:04:51Z",
    "closed_at": "2018-03-05T05:04:51Z",
    "author_association": "OWNER",
    "body": "There is a lot more emphasis on fatal error handling now than is necessary to support the thesis.  Trim that text back.  The draft only needs to talk about the importance of collecting feedback from the implementation, deployment, and use of protocols and that error reporting mechanisms are critical to that process.  Then a brief paragraph on the importance of compliance checks in maintaining a healthy ecosystem should do it.\r\n\r\nThe notion of tolerance as a goal probably needs more text.  Tolerance of varying input is costly (both in terms of specification for accuracy and completeness, and in terms of implementation and testing), so it has to be properly justified by other design goals.  \r\n\r\nFor instance, HTML justifies its tolerance by recognizing that documents are frequently authored by humans, who make mistakes.  If HTML were to punish mistakes as a strict XML or SGML parser would, then many documents would not render: the handling of syntax errors in XML is brutal and very hard to diagnose."
  },
  {
    "url": "https://api.github.com/repos/martinthomson/postel-was-wrong/issues/5",
    "repository_url": "https://api.github.com/repos/martinthomson/postel-was-wrong",
    "labels_url": "https://api.github.com/repos/martinthomson/postel-was-wrong/issues/5/labels{/name}",
    "comments_url": "https://api.github.com/repos/martinthomson/postel-was-wrong/issues/5/comments",
    "events_url": "https://api.github.com/repos/martinthomson/postel-was-wrong/issues/5/events",
    "html_url": "https://github.com/martinthomson/postel-was-wrong/pull/5",
    "id": 268634552,
    "number": 5,
    "title": "Draw a different conclusion",
    "user": {
      "login": "martinthomson",
      "id": 67641,
      "avatar_url": "https://avatars1.githubusercontent.com/u/67641?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/martinthomson",
      "html_url": "https://github.com/martinthomson",
      "followers_url": "https://api.github.com/users/martinthomson/followers",
      "following_url": "https://api.github.com/users/martinthomson/following{/other_user}",
      "gists_url": "https://api.github.com/users/martinthomson/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/martinthomson/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/martinthomson/subscriptions",
      "organizations_url": "https://api.github.com/users/martinthomson/orgs",
      "repos_url": "https://api.github.com/users/martinthomson/repos",
      "events_url": "https://api.github.com/users/martinthomson/events{/privacy}",
      "received_events_url": "https://api.github.com/users/martinthomson/received_events",
      "type": "User",
      "site_admin": false
    },
    "labels": [

    ],
    "state": "closed",
    "locked": false,
    "assignee": null,
    "assignees": [

    ],
    "milestone": null,
    "comments": 0,
    "created_at": "2017-10-26T05:33:19Z",
    "updated_at": "2018-05-03T05:45:37Z",
    "closed_at": "2017-10-27T09:47:33Z",
    "author_association": "OWNER",
    "pull_request": {
      "url": "https://api.github.com/repos/martinthomson/postel-was-wrong/pulls/5",
      "html_url": "https://github.com/martinthomson/postel-was-wrong/pull/5",
      "diff_url": "https://github.com/martinthomson/postel-was-wrong/pull/5.diff",
      "patch_url": "https://github.com/martinthomson/postel-was-wrong/pull/5.patch"
    },
    "body": "Shifting the emphasis to error reporting was a mistake.  Failure tolerance\r\nisn't inherently bad, it's only bad when it is necessarily outside of the\r\nproscribed space defined by specification.  Indeed, some specifications\r\n(notably HTML) value tolerance of errors and provide specific guidance about\r\nthat tolerance.  That type of design ensures that fault tolerance is clearly\r\nspecified.\r\n\r\nWhere fault tolerance comes in is where it forms part of a feedback loop.  As\r\nmaintainers of protocols (as distinct from mere authors who discarge their\r\nresponsibility when the specification is \"published\"), the ability to continue\r\nmaintenace depends greatly on the amount and quality of feedback from\r\nimplementations and deployments.  Reporting faults is merely a part of that.\r\n\r\nCloses #3, #2."
  },
  {
    "url": "https://api.github.com/repos/martinthomson/postel-was-wrong/issues/4",
    "repository_url": "https://api.github.com/repos/martinthomson/postel-was-wrong",
    "labels_url": "https://api.github.com/repos/martinthomson/postel-was-wrong/issues/4/labels{/name}",
    "comments_url": "https://api.github.com/repos/martinthomson/postel-was-wrong/issues/4/comments",
    "events_url": "https://api.github.com/repos/martinthomson/postel-was-wrong/issues/4/events",
    "html_url": "https://github.com/martinthomson/postel-was-wrong/issues/4",
    "id": 262369361,
    "number": 4,
    "title": "A New Design Principle",
    "user": {
      "login": "annevk",
      "id": 1544111,
      "avatar_url": "https://avatars0.githubusercontent.com/u/1544111?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/annevk",
      "html_url": "https://github.com/annevk",
      "followers_url": "https://api.github.com/users/annevk/followers",
      "following_url": "https://api.github.com/users/annevk/following{/other_user}",
      "gists_url": "https://api.github.com/users/annevk/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/annevk/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/annevk/subscriptions",
      "organizations_url": "https://api.github.com/users/annevk/orgs",
      "repos_url": "https://api.github.com/users/annevk/repos",
      "events_url": "https://api.github.com/users/annevk/events{/privacy}",
      "received_events_url": "https://api.github.com/users/annevk/received_events",
      "type": "User",
      "site_admin": false
    },
    "labels": [

    ],
    "state": "closed",
    "locked": false,
    "assignee": null,
    "assignees": [

    ],
    "milestone": null,
    "comments": 1,
    "created_at": "2017-10-03T09:58:04Z",
    "updated_at": "2018-05-03T05:48:34Z",
    "closed_at": "2018-05-03T05:48:34Z",
    "author_association": "NONE",
    "body": "I think https://www.w3.org/TR/html-design-principles/#interoperability is much preferable to this principle (though maybe not the exact words used).\r\n\r\n1. \"Undefined inputs\" is a problem in the sense that the format/protocol should have an answer for all inputs. (That also gives you an extensibility story.)\r\n2. \"Fail noisily\" is problematic as we don't necessarily want to expose end users to failures. And consider legacy clients encountering a new feature (undefined input?) should not necessarily fail or throw either.\r\n\r\nTo elaborate on 1, not dealing with erroneous/undefined inputs is common in IETF documents and causes all sorts of problems for:\r\n\r\n* Text encodings (now largely solved by https://encoding.spec.whatwg.org/)\r\n* URLs (see https://url.spec.whatwg.org/ for a solution)\r\n* HTTP (see https://github.com/httpwg/http11bis/issues)\r\n* MIME types (see https://github.com/whatwg/mimesniff/issues/30)\r\n\r\nThat has been far more harmful than \"be liberal\" has ever been. After all, you cannot even be liberal if all inputs have defined behavior."
  },
  {
    "url": "https://api.github.com/repos/martinthomson/postel-was-wrong/issues/3",
    "repository_url": "https://api.github.com/repos/martinthomson/postel-was-wrong",
    "labels_url": "https://api.github.com/repos/martinthomson/postel-was-wrong/issues/3/labels{/name}",
    "comments_url": "https://api.github.com/repos/martinthomson/postel-was-wrong/issues/3/comments",
    "events_url": "https://api.github.com/repos/martinthomson/postel-was-wrong/issues/3/events",
    "html_url": "https://github.com/martinthomson/postel-was-wrong/issues/3",
    "id": 236753189,
    "number": 3,
    "title": "Consequence of open-loop development process",
    "user": {
      "login": "martinthomson",
      "id": 67641,
      "avatar_url": "https://avatars1.githubusercontent.com/u/67641?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/martinthomson",
      "html_url": "https://github.com/martinthomson",
      "followers_url": "https://api.github.com/users/martinthomson/followers",
      "following_url": "https://api.github.com/users/martinthomson/following{/other_user}",
      "gists_url": "https://api.github.com/users/martinthomson/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/martinthomson/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/martinthomson/subscriptions",
      "organizations_url": "https://api.github.com/users/martinthomson/orgs",
      "repos_url": "https://api.github.com/users/martinthomson/repos",
      "events_url": "https://api.github.com/users/martinthomson/events{/privacy}",
      "received_events_url": "https://api.github.com/users/martinthomson/received_events",
      "type": "User",
      "site_admin": false
    },
    "labels": [

    ],
    "state": "closed",
    "locked": false,
    "assignee": null,
    "assignees": [

    ],
    "milestone": null,
    "comments": 0,
    "created_at": "2017-06-18T23:42:52Z",
    "updated_at": "2017-10-27T09:47:33Z",
    "closed_at": "2017-10-27T09:47:33Z",
    "author_association": "OWNER",
    "body": "An earlier version of the draft included text to the effect that the maxim was less advice and more a reflection on the entropic decay of a protocol ecosystem.  The these of the draft is that, over time, implementations are strongly motivated to be more and more tolerant of rubbish.  If we create a feedback loop, and are prepared to maintain a protocol, then this sort of decay is much less likely to occur.\r\n\r\nThis is related to the comments in #2, which talks about how development processes have evolved over time."
  },
  {
    "url": "https://api.github.com/repos/martinthomson/postel-was-wrong/issues/2",
    "repository_url": "https://api.github.com/repos/martinthomson/postel-was-wrong",
    "labels_url": "https://api.github.com/repos/martinthomson/postel-was-wrong/issues/2/labels{/name}",
    "comments_url": "https://api.github.com/repos/martinthomson/postel-was-wrong/issues/2/comments",
    "events_url": "https://api.github.com/repos/martinthomson/postel-was-wrong/issues/2/events",
    "html_url": "https://github.com/martinthomson/postel-was-wrong/issues/2",
    "id": 235938650,
    "number": 2,
    "title": "Spec lifecycle and specified permissiveness",
    "user": {
      "login": "mnot",
      "id": 74384,
      "avatar_url": "https://avatars1.githubusercontent.com/u/74384?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/mnot",
      "html_url": "https://github.com/mnot",
      "followers_url": "https://api.github.com/users/mnot/followers",
      "following_url": "https://api.github.com/users/mnot/following{/other_user}",
      "gists_url": "https://api.github.com/users/mnot/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/mnot/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/mnot/subscriptions",
      "organizations_url": "https://api.github.com/users/mnot/orgs",
      "repos_url": "https://api.github.com/users/mnot/repos",
      "events_url": "https://api.github.com/users/mnot/events{/privacy}",
      "received_events_url": "https://api.github.com/users/mnot/received_events",
      "type": "User",
      "site_admin": false
    },
    "labels": [

    ],
    "state": "closed",
    "locked": false,
    "assignee": null,
    "assignees": [

    ],
    "milestone": null,
    "comments": 3,
    "created_at": "2017-06-14T16:32:05Z",
    "updated_at": "2018-05-03T05:49:26Z",
    "closed_at": "2018-05-03T05:49:26Z",
    "author_association": "NONE",
    "body": "Two thoughts that might be worth considering integrating --\r\n\r\n1) Many protocol development efforts, at their start, are under fairly extreme circumstances. There's a certain amount of hype about the \"new thing\", and yet reluctance to invest *too* much into it, in case it fails. At the same time, there's a rush to complete, so as to beat potential competitors to market, and to assure that sufficient resources (spec author, implementer, etc.) are available. \r\n\r\nAll of this adds up to a tendency to write things down as quickly as possible; considering every corner case and design implication is seen as unnecessary, and putting the effort at additional risk.\r\n\r\nHTTP/1.1 is an excellent example of this; RFC2616 was written down in a great rush, because the Web was \"taking off.\" The httpbis effort took so long not because we were aligning the specs with the reality of implementation (as the current draft implies), but because we had to untangle a substantial mess (we also had to more precisely define for the corner cases, because HTTP was being used for more things -- which your draft does mention, at least generally).\r\n\r\nhttpbisbis might be the one where we tighten things up more substantially....\r\n\r\nConceptually, this is \"protocol maintenance\", if you expand the definition and give some background. I think of this in terms of precision of definition, which is apt to be loose at the beginning of a protocol's lifetime (but we can adopt some practices and tools to minimise this). \r\n\r\n2) There's a substantial body of experience that -- for some protocol artefacts -- permissive consumption is still necessary. In particular, formats that are produced by a large, non-technical or semi-technical set of authors need a fair amount of \"slop.\" There are a lot of war stories in the XML community along these lines (happy to dig up some links).\r\n\r\nI don't think this is that far from the current draft's content; it could be addressed by noting that these sorts of artefacts need permissiveness \"built in\"; i.e., they benefit from detailed, precise error handling defined up front. Waving your hands and saying \"consume permissively\" isn't good enough.\r\n\r\nHappy to put some pull requests together, thought It'd be worth discussing first."
  },
  {
    "url": "https://api.github.com/repos/martinthomson/postel-was-wrong/issues/1",
    "repository_url": "https://api.github.com/repos/martinthomson/postel-was-wrong",
    "labels_url": "https://api.github.com/repos/martinthomson/postel-was-wrong/issues/1/labels{/name}",
    "comments_url": "https://api.github.com/repos/martinthomson/postel-was-wrong/issues/1/comments",
    "events_url": "https://api.github.com/repos/martinthomson/postel-was-wrong/issues/1/events",
    "html_url": "https://github.com/martinthomson/postel-was-wrong/issues/1",
    "id": 96606724,
    "number": 1,
    "title": "Commentary",
    "user": {
      "login": "zackw",
      "id": 325899,
      "avatar_url": "https://avatars0.githubusercontent.com/u/325899?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/zackw",
      "html_url": "https://github.com/zackw",
      "followers_url": "https://api.github.com/users/zackw/followers",
      "following_url": "https://api.github.com/users/zackw/following{/other_user}",
      "gists_url": "https://api.github.com/users/zackw/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/zackw/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/zackw/subscriptions",
      "organizations_url": "https://api.github.com/users/zackw/orgs",
      "repos_url": "https://api.github.com/users/zackw/repos",
      "events_url": "https://api.github.com/users/zackw/events{/privacy}",
      "received_events_url": "https://api.github.com/users/zackw/received_events",
      "type": "User",
      "site_admin": false
    },
    "labels": [

    ],
    "state": "closed",
    "locked": false,
    "assignee": null,
    "assignees": [

    ],
    "milestone": null,
    "comments": 1,
    "created_at": "2015-07-22T16:15:51Z",
    "updated_at": "2018-05-03T05:58:29Z",
    "closed_at": "2018-05-03T05:58:29Z",
    "author_association": "NONE",
    "body": "I wrote a public commentary on this I-D at https://readings.owlfolio.org/2015/postel-was-wrong/ .\n\nI would like to draw your attention particularly to the list of \"real-world situations from the last couple decades of Internet protocol design that the author may or may not have considered.\"  These are all cases where (it seems to me) your proposed strictness principle may be incompatible with other desirable engineering goals, e.g. incremental deployment of extensions, author ergonomics, and security.  Explicit consideration of such cases would, IMHO, make your proposal stronger.  I'll summarize them here, but you may want to click through for the footnotes and so on:\n- Reserved bits in TCP/IP packet headers, treated as must-be-zero by some routers, preventing incremental deployment of ECN\n- TLS version intolerance (again, strictness versus incremental deployment)\n- Padding oracles (in which fail-fast leads to a complete breach of confidentiality)\n- The mandated error recovery behavior in both HTML5 and CSS\n"
  }

]
